; вариант 10: целые числа I1 = 75, I2 = -457; регистр R1 = DX; косвенная адресация = [BP+DI] (базовый регистр + индексный регистр)

.486 		  ; определяем режим процессора (32-битный код)
.model flat   ; устанавливаем модель памяти

.data 						 ; секция данных
I1_byte DB 4Bh 				 ; число I1 как байт
I1_word DW 4B00h 			 ; число I1 как слово
I1_doubleword DD 4B000000h   ; число I1 как двойное слово
I2_word DW 37FEh 			 ; число I2 как слово
I2_doubleword DD 37FEFFFFh 	 ; число I2 как двойное слово

.code 					  ; секция кода
_start: 				  ; начало программы
mov edx, I2_doubleword    ; загружаем значение I2_doubleword в 32-битный регистр EDX
mov ebp, offset I2_word   ; загружаем в регистр EBP смещение, равное значению I2_word (смещение переменной - адрес памяти,по которому хранится переменная 00402008)
movzx edi, I1_byte 		  ; загружаем значение I1_byte в 32-битный регистр EDI с расширением нулями (регистр-то 32-битный)
mov [ebp+edi], edx 		  ; загружаем значение из регистра EDX в регистр EBP со смещением из регистра EDI
ret                       ; завершение программы
end _start 				  ; конец программы

; пояснения к коду
; используется 32-битный код (.486), потому что он совместим и с 32-, и с 64-битными ОС, а также он поддерживает много библиотек
; модель памяти flat - типичная модель для 32- и 64-битных систем
; значения переменных написаны для дампа памяти, потому что это особенность архитектуры процессоров x86 и x86_64 (так в памяти хранятся данные)
; в конце значения переменных пишется h для обозначения 16-ричной системы (hexadecimal)
; mov - команда для переноса данных из памяти в регистры
; перед всеми регистрами есть буква e (edx, edi, ebp), которая обозначает 32-битный регистр
; offset - смещает метку в регистре (делает отступ)
; movzx - команда для переноса данных с дополнением нулями (8 бит корректно записывается в 32-битный регистр с доп. нулями)
; конструкция [ebp+edi] в записи mov [ebp+edi], edx означает перенос в регистр ebp со смещением на кол-во из регистра edi
; ret - специальная команда, которая прерывает выполнение программы (завершение работы)